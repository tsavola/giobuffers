// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package flat

import (
	flatbuffers "github.com/google/flatbuffers/go"
)

type Constraints struct {
	_tab flatbuffers.Struct
}

func (rcv *Constraints) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *Constraints) Table() flatbuffers.Table {
	return rcv._tab.Table
}

func (rcv *Constraints) Width(obj *Constraint) *Constraint {
	if obj == nil {
		obj = new(Constraint)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+0)
	return obj
}
func (rcv *Constraints) Height(obj *Constraint) *Constraint {
	if obj == nil {
		obj = new(Constraint)
	}
	obj.Init(rcv._tab.Bytes, rcv._tab.Pos+8)
	return obj
}

func CreateConstraints(builder *flatbuffers.Builder, width_min int32, width_max int32, height_min int32, height_max int32) flatbuffers.UOffsetT {
	builder.Prep(4, 16)
	builder.Prep(4, 8)
	builder.PrependInt32(height_max)
	builder.PrependInt32(height_min)
	builder.Prep(4, 8)
	builder.PrependInt32(width_max)
	builder.PrependInt32(width_min)
	return builder.Offset()
}
